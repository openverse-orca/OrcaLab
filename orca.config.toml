
# 这个文件是所有人共享的配置，复制一份，命名为 orca.config.user.toml
# 个人相关的配置写在orca.config.user.toml中, 个人配置不会提交到Git中。
# 运行时这两个配置会合并。

[orcalab]

# 场景编辑服务的端口。
edit_port = 50151

# 仿真服务的端口。
sim_port = 50051

# [个人配置] Viewport可执行文件的绝对路径。目前还没有通过pip分发，先手填。
executable = ""

# [个人配置] Launch or attach。
# Launch: 由Python启动Viewport。
# Attach: 连接到以经启动的Viewport。
attach = false

# [个人配置] 用到的pak包的绝对路径。目前先手填。至少要有一个engine的pak和level的pak。
# 启动时脚本会把它们放到正确的位置。
paks = [
    # "/xxx/engine_linux.pak",
    # "/xxx/test_level_linux.pak",
]

# [个人配置] 启动关卡
level = "Default_level"

# [个人配置] 锁帧
lock_fps = 60

# Copilot 服务器配置
[copilot]
# 服务器地址
server_url = "http://103.237.28.246:9023"
# 请求超时时间（秒）
timeout = 180

# 仿真程序配置
[external_programs]
# 默认程序配置
default = "run_sim_loop"

# 仿真程序列表
[[external_programs.programs]]
name = "run_sim_loop"
display_name = "Empty Loop Simulation"
command = "python"
args = ["-m", "orca_gym.scripts.run_sim_loop",]
description = "启动物理仿真循环"

[[external_programs.programs]]
name = "run_wheeled_chassis"
display_name = "Wheeled Chassis Example"
command = "python"
args = ["-m", "examples.wheeled_chassis.run_wheeled_chassis", "--orcagym_addr", "localhost:50051", "--agent_name", "openloong_gripper_2f85_mobile_base_usda_1", "--env_name", "WheeledChassis"]
description = "启动轮式底盘物理仿真示例"

[[external_programs.programs]]
name = "run_character"
display_name = "Character Example"
command = "python"
args = ["-m", "examples.character.run_character",]
description = "启动角色动画物理仿真示例"